@page "/login"
@inject Blazored.LocalStorage.ILocalStorageService localStorage
@using Core.Model
@using ClientApp.Services
@inject HttpClient Http
@inject NavigationManager NavigationManager

<head>
    <link rel="stylesheet" href="css/login.css" />
</head>

<header>
    <div style="text-align: right;">
        <button id="navigate" class="bi bi-house-door-fill" @onclick="ToHomePage"></button>
    </div>
</header>

<div class="login-container">
    <div class="login-card">
        <img id="loginlogo" src="børneklubben_logo.png" alt="Børneklubben Logo">
        <h3>Admin Login</h3>
        <EditForm EditContext="@loginEditContext" OnValidSubmit="@HandleLogin">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <div>
                <label for="LoginUsername">Username</label>
                <InputText id="LoginUsername" @bind-Value="loginUser.Username" class="form-control" />
            </div>
            <div>
                <label for="LoginPassword">Password</label>
                <InputText id="LoginPassword" @bind-Value="loginUser.Password" type="password" class="form-control" />
            </div>
            <div>
                <button type="submit" class="btn btn-primary">Log in</button>
            </div>
            @if (!string.IsNullOrEmpty(loginMessage))
            {
                <div class="alert alert-info">@loginMessage</div>
            }
        </EditForm>
    </div>
</div>

@code {
    private Admin loginUser = new Admin();
    private EditContext loginEditContext;
    private string loginMessage = "";

    [Inject]
    private ILoginService LoginService { get; set; }

    protected override void OnInitialized()
    {
        loginEditContext = new EditContext(loginUser);
    }

    private async Task HandleLogin()
    {
        var response = await LoginService.VerifyLogin(loginUser.Username, loginUser.Password);
        if (response)
        {
            var admin = await LoginService.GetAdmin(loginUser.Username);
            await localStorage.SetItemAsync("adminUser", admin); 
            NavigationManager.NavigateTo("/admin");
        }
        else
        {
            loginMessage = "Invalid username or password.";
        }
    }

    private void ToHomePage()
    {
        NavigationManager.NavigateTo("/", forceLoad: true);
    }
}