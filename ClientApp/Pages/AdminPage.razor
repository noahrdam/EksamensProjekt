@page "/admin"
@using Core.Model
@using ClientApp.Services
@using System.Net.Http.Json
@inject HttpClient httpClient
@inject NavigationManager NavigationManager
@inject IAdminService AdminService

<head>
    <link rel="stylesheet" href="css/admin.css" />
</head>

<header>
    <div style="text-align: right;">
        <button id="navigate" class="bi bi-arrow-right-circle-fill" @onclick="ToYouthPage"> Til frivilige 16-18</button>
        <button id="navigate" class="bi bi-house-door-fill" @onclick="ToHomePage"></button>
    </div>
</header>

<div class="margin">
    <h1>Børneklubbens ansøgninger</h1>
</div>

<div class="margin">
    <h3>Uger:</h3>
    <div>
        @if (weeks != null)
        {
            @foreach (var week in weeks)
            {
                var weekCount = GetApplicationCountForWeek(week);
                var weekClass = GetButtonClassForWeekCount(weekCount);
                <button @onclick="() => FilterApplicationsByWeek(week)" class="btn m-1 @weekClass" >Uge @week (@GetApplicationCountForWeek(week))</button>
            }
        }
    </div>
</div>

@if (selectedWeek.HasValue)
{
    <div class="margin">
        <h3>Perioder i uge @selectedWeek:</h3>
        @foreach (var ev in events.Where(e => e.Week == selectedWeek))
        {
            var periodCount = GetApplicationCountForPeriod(selectedWeek.Value,ev.From,ev.To);
            var periodClass = GetButtonClassForPeriodCount(periodCount);
            <button @onclick="() => FilterApplicationsByPeriod(selectedWeek.Value, ev.From, ev.To)" class="btn btn-secondary m-1 @periodClass">@ev.From - @ev.To (@GetApplicationCountForPeriod(selectedWeek.Value, ev.From, ev.To))</button>
        }
    </div>
}
else
{
    Console.WriteLine("No week selected");
}

<div class="margin">
    <button id="filterbutton" class="bi bi-sliders" @onclick="ToggleFilters">&nbsp;@filterButtonText</button>
</div>

<div id="filters-container" class="margin @filterContainerClass">
    <div class="checkbox-button-group">
        <input type="checkbox" id="showCrewNumber" @bind="showCrewNumber" class="checkbox-input" />
        <label for="showCrewNumber" class="checkbox-label">Kræv nummer</label>

        <input type="checkbox" id="showParentName" @bind="showParentName" class="checkbox-input" />
        <label for="showParentName" class="checkbox-label">Forældre navn</label>

        <input type="checkbox" id="showMail" @bind="showMail" class="checkbox-input" />
        <label for="showMail" class="checkbox-label">Mail</label>

        <input type="checkbox" id="showConsent" @bind="showConsent" class="checkbox-input" />
        <label for="showConsent" class="checkbox-label">Samtykke</label>

        <input type="checkbox" id="showChildName" @bind="showChildName" class="checkbox-input" />
        <label for="showChildName" class="checkbox-label">Barnets navn</label>

        <input type="checkbox" id="showAge" @bind="showAge" class="checkbox-input" />
        <label for="showAge" class="checkbox-label">Alder</label>
    </div>
    <div class="checkbox-button-group">
        <input type="checkbox" id="showClothingSize" @bind="showClothingSize" class="checkbox-input" />
        <label for="showClothingSize" class="checkbox-label">Tøjstørrelse</label>

        <input type="checkbox" id="showInterests" @bind="showInterests" class="checkbox-input" />
        <label for="showInterests" class="checkbox-label">Interesser</label>

        <input type="checkbox" id="showComment" @bind="showComment" class="checkbox-input" />
        <label for="showComment" class="checkbox-label">Kommentar</label>

        <input type="checkbox" id="showFirstPriority" @bind="showFirstPriority" class="checkbox-input" />
        <label for="showFirstPriority" class="checkbox-label">1. Prioritet</label>

        <input type="checkbox" id="showSecondPriority" @bind="showSecondPriority" class="checkbox-input" />
        <label for="showSecondPriority" class="checkbox-label">2. Prioritet</label>

        <input type="checkbox" id="showEditFinalDate" @bind="showStatus" class="checkbox-input" />
        <label for="showEditFinalDate" class="checkbox-label">Opdater Status</label>

        <input type="checkbox" id="showDate" @bind="showDate" class="checkbox-input" />
        <label for="showDate" class="checkbox-label">Dato</label>

        <input type="checkbox" id="showPublished" @bind="showPublished" class="checkbox-input" />
        <label for="showPublished" class="checkbox-label">Offentliggørelse</label>
    </div>
</div>

@if (filteredApplications == null)
{
    <p><em>Loading...</em></p>
}
else if (!filteredApplications.Any())
{
    <p><em>No applications found.</em></p>
}
else
{
    <table>
        <thead>
            <tr>
                @if (showCrewNumber)
                {
                    <th>Kræv Nummer</th>
                }
                @if (showParentName)
                {
                    <th>Forældre navn</th>
                }
                @if (showMail)
                {
                    <th>Mail</th>
                }
                @if (showChildName)
                {
                    <th>Barn Navn</th>
                }
                @if (showAge)
                {
                    <th>Barn Alder</th>
                }
                @if (showClothingSize)
                {
                    <th>Barn Tøjstørrelse</th>
                }
                @if (showInterests)
                {
                    <th>Barn Interesser</th>
                }
                @if (showComment)
                {
                    <th>Kommentar</th>
                }
                @if (showFirstPriority)
                {
                    <th>Første prio</th>
                }
                @if (showSecondPriority)
                {
                    <th>Anden prio</th>
                }
                @if (showStatus)
                {
                    <th>Opdater status</th>
                }
                @if (showDate)
                {
                    <th>Dato</th>
                }
                @if (showConsent)
                {
                    <th>Samtykke</th>
                }
                @if (showPublished)
				{
					<th>Offentliggjort</th>
				}
                <th>Rediger</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var ap in filteredApplications)
            {
                @foreach (var child in ap.ParentVolunteer.Children)
                {
                    <tr style="@(ap.Status.Contains("Venteliste") ? "background-color:yellow" : "")"
                        onmouseover="if (this.style.backgroundColor==='yellow')this.style.backgroundColor='darkorange';"
                        onmouseout="if (this.style.backgroundColor==='darkorange')this.style.backgroundColor='yellow';">
                        @if (showCrewNumber)
                        {
                            <td>@ap.ParentVolunteer.CrewNumber</td>
                        }
                        @if (showParentName)
                        {
                            <td>@ap.ParentVolunteer.Name</td>
                        }
                        @if (showMail)
                        {
                            <td>@ap.ParentVolunteer.Mail</td>
                        }
                        @if (showChildName)
                        {
                            <td>@child.Name</td>
                        }
                        @if (showAge)
                        {
                            <td>@child.Age</td>
                        }
                        @if (showClothingSize)
                        {
                            <td>@child.ClothingSize</td>
                        }
                        @if (showInterests)
                        {
                            <td>@child.Interests</td>
                        }
                        @if (showComment)
                        {
                            <td>@ap.Comment</td>
                        }
                        @if (showFirstPriority)
                        {
                            <td>@ap.FirstPrio.From - @ap.FirstPrio.To (Uge @ap.FirstPrio.Week)</td>
                        }
                        @if (showSecondPriority)
                        {
                            <td>@ap.SecondPrio.From - @ap.SecondPrio.To (Uge @ap.SecondPrio.Week)</td>
                        }
                        @if (showStatus)
                        {
                            <td>
                                <select class="form-select" value="@ap.Status" @onchange="(e) => UpdateStatus(ap, e.Value.ToString())">
                                    <option value="1.Prioritet">1. Prioritet</option>
                                    <option value="2.Prioritet">2. Prioritet</option>
                                    <option value="Venteliste">Venteliste</option>
                                </select>
                            </td>
                        }
                        @if (showDate)
                        {
                            <td>@ap.DateOfApplication</td>
                        }
                        @if (showConsent)
                        {
                            <td>
                                @if (!string.IsNullOrEmpty(ap.ConsentForm))
                                {
                                    <img src="@ap.ConsentForm" alt="Signature" style="width:200px; height:100px;" />
                                }
                                else
                                {
                                    <p>No signature</p>
                                }
                            </td>
                        }
                        @if (showPublished)
                        {
                            <td>
                                @if (ap.IsPublished)
                                {
                                    <span class="bi bi-circle-fill" style="color: green;"></span>
                                }
                                else
                                {
                                    <span class="bi bi-circle-fill" style="color: gray;"></span>
                                }
                            </td>
                        }
                        <td>
                            <button id="delete" @onclick="() => DeleteApplication(ap.ApplicationId)"><i class="bi bi-trash"></i></button>
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>

    <div class="margin">
        <button id="publishAll" class="btn btn-primary" @onclick="PublishAllApplications">Offentliggør alle ansøgninger</button> <!-- Add the publish all button -->
    </div>
}

@code {
    private List<Application> applications;
    private List<Application> filteredApplications;
    private List<Event> events;
    private List<int> weeks;
    private string selectedStatus;
    private string serverURL = "https://localhost:7095/";
    private Application selectedApplication = new Application();
    private ModalDialog? editDialog { get; set; }
    private EditContext? editContext;
    private int? selectedWeek;

    private bool showCrewNumber = true;
    private bool showParentName = true;
    private bool showMail = true;
    private bool showConsent = false;
    private bool showChildName = true;
    private bool showAge = true;
    private bool showClothingSize = false;
    private bool showInterests = false;
    private bool showComment = true;
    private bool showFirstPriority = true;
    private bool showSecondPriority = true;
    private bool showStatus = true;
    private bool showDate = true;
    private bool showPublished = true;

    private string filterButtonText = "Vis alle filtre";
    private string filterContainerClass = "hidden";

    protected override async Task OnInitializedAsync()
    {
        await LoadData();
    }

    private async Task LoadData()
    {
        applications = await AdminService.GetAllApplications();
        events = await AdminService.GetAllEvents();
        weeks = events.Select(e => e.Week).Distinct().ToList();
        filteredApplications = applications;
        FilterApplications();

    }

    private async Task FilterApplicationsByWeek(int week)
    {
        selectedWeek = week;
        filteredApplications = await AdminService.GetFilteredApplicationsByWeek(week);
        StateHasChanged();
    }

    private async Task FilterApplicationsByPeriod(int week, string from, string to)
    {
        filteredApplications = await AdminService.GetFilteredApplicationsByPeriod(week, from, to);
        StateHasChanged();
    }

    private void FilterApplications()
    {
        filteredApplications = filteredApplications.OrderBy(ap => ap.Status == "Venteliste").ThenBy(ap => ap.Status).ToList();
    }

    private async Task UpdateStatus(Application application, string prio)
    {
        application.Status = prio;

        var success = await AdminService.UpdateStatus(application);
        if (success)
        {
            await LoadData(); // Reload data to reflect the update immediately
        }
    }

    private int GetApplicationCountForWeek(int week)
    {
        return applications
             .Where(ap => (ap.FirstPrio.Week == week && ap.Status == "1.Prioritet") ||
                          (ap.SecondPrio.Week == week && ap.Status == "2.Prioritet"))
             .Sum(ap => ap.ParentVolunteer.Children.Count);
    }

    private int GetApplicationCountForPeriod(int week, string from, string to)
    {
        return applications
            .Where(ap => (ap.FirstPrio.Week == week && ap.FirstPrio.From == from && ap.FirstPrio.To == to && ap.Status == "1.Prioritet") ||
                         (ap.SecondPrio.Week == week && ap.SecondPrio.From == from && ap.SecondPrio.To == to && ap.Status == "2.Prioritet"))
            .Sum(ap => ap.ParentVolunteer.Children.Count);
    }

    private string GetButtonClassForWeekCount(int count)
    {
        if (count < 13) return "btn-green";
        if (count < 18) return "btn-yellow";
        return "btn-red";
    }

    private string GetButtonClassForPeriodCount(int count)
    {
        if (count < 6) return "btn-green";
        if (count < 10) return "btn-yellow";
        return "btn-red";
    }

    private async Task DeleteApplication(int applicationId)
    {
        var success = await AdminService.DeleteApplication(applicationId);
        if (success)
        {
            await LoadData();
        }
    }

    private async Task PublishAllApplications()
    {
        var success = await AdminService.PublishAllApplications(applications);
        if (success)
        {
            await LoadData();
        }
    }

    private async Task ToYouthPage()
    {
        NavigationManager.NavigateTo("/youth", forceLoad: true);
    }

    private void ToggleFilters()
    {
        if (filterContainerClass == "hidden")
        {
            filterContainerClass = "";
            filterButtonText = "Gem alle filtre";
        }
        else
        {
            filterContainerClass = "hidden";
            filterButtonText = "Vis alle filtre";
        }
    }

    private void ToHomePage()
    {
        NavigationManager.NavigateTo("/", forceLoad: true);
    }
}
