@page "/admin"
@using Core.Model
@inject HttpClient httpClient
@inject NavigationManager NavigationManager

<h1>Alle ansøgninger</h1>

<div style="text-align: right;">
    <button id="navigate" class="bi bi-arrow-right-circle-fill" @onclick=ToYouthPage>  Til frivilige 16-18</button>
</div>

<div>
    <h3>Uger:</h3>
    @foreach (var week in weeks)
    {
        var weekCount = GetApplicationCountForWeek(week);
        var weekClass = GetButtonClassForWeekCount(weekCount);
        <button @onclick="() => FilterApplicationsByWeek(week)" class="btn m-1 @weekClass">
            Uge @week (@weekCount)
        </button>
    }
</div>

@if (selectedWeek.HasValue)
{
    <div>
        <h3>Perioder i uge @selectedWeek:</h3>
        @foreach (var period in GetPeriodsForWeek(selectedWeek.Value))
        {
            var periodCount = GetApplicationCountForPeriod(period.EventId);
            var periodClass = GetButtonClassForPeriodCount(periodCount);
            <button @onclick="() => FilterApplicationsByPeriod(period.EventId)" class="btn btn-secondary m-1 @periodClass">
                @period.From - @period.To (@periodCount)
            </button>
        }
    </div>
}

<div class="col-12 mb-3">
    <div class="checkbox-container">
        <span>
            <label><input type="checkbox" @bind="showCrewNumber" /> Kræv nummer</label>
        </span>
        <span>
            <label><input type="checkbox" @bind="showParentName" /> Forældre navn</label>
        </span>
        <span>
            <label><input type="checkbox" @bind="showMail" /> Mail</label>
        </span>
        <span>
            <label><input type="checkbox" @bind="showConsent" /> Samtykke</label>
        </span>
        <span>
            <label><input type="checkbox" @bind="showChildName" /> Barnets navn</label>
        </span>
        <span>
            <label><input type="checkbox" @bind="showAge" /> Alder</label>

            <br />
        </span>
        <span>
            <label><input type="checkbox" @bind="showClothingSize" /> Tøjstørrelse</label>
        </span>
        <span>
            <label><input type="checkbox" @bind="showInterests" /> Interesser</label>
        </span>
        <span>
            <label><input type="checkbox" @bind="showComment" /> Kommentar</label>
        </span>
        <span>
            <label><input type="checkbox" @bind="showFirstPriority" /> 1. Prioritet</label>
        </span>
        <span>
            <label><input type="checkbox" @bind="showSecondPriority" /> 2. Prioritet</label>
        </span>
       @*  <span>
            <label><input type="checkbox" @bind="showFinalDate" /> Endelig Dato </label>
        </span> *@
        <span>
            <label><input type="checkbox" @bind="showEditFinalDate" /> Rediger Endelig Dato</label>
        </span>
    </div>
</div>

@if (applications == null)
{
    <p><em>Loading...</em></p>
}
else if (!filteredApplications.Any())
{
    <p><em>No applications found.</em></p>
}
else
{
    <table class="table table-striped">
        <thead>
            <tr>
                @if (showCrewNumber)
                {
                    <th>Kræv Nummer</th>
                }
                @if (showParentName)
                {
                    <th>Forældre navn</th>
                }
                @if (showMail)
                {
                    <th>Mail</th>
                }
                @if (showChildName)
                {
                    <th>Barn Navn</th>
                }
                @if (showAge)
                {
                    <th>Barn Alder</th>
                }
                @if (showClothingSize)
                {
                    <th>Barn Tøjstørrelse</th>
                }
                @if (showInterests)
                {
                    <th>Barn Interesser</th>
                }
                @if (showComment)
				{
					<th>Kommentar</th>
				}
                @if (showFirstPriority)
                {
                    <th>Første prio</th>
                }
                @if (showSecondPriority)
                {
                    <th>Anden prio</th>
                }
                @if (showEditFinalDate)
                {
                    <th>Opdater status</th>
                }
                @if (showConsent)
                {
                    <th>Samtykke</th>
                }
            </tr>
        </thead>
        <tbody>
            @foreach (var ap in filteredApplications)
            {
                @foreach (var child in ap.ParentVolunteer.Children)
                {
                    <tr>
                        @if (showCrewNumber)
                        {
                            <td>@ap.ParentVolunteer.CrewNumber</td>
                        }
                        @if (showParentName)
                        {
                            <td>@ap.ParentVolunteer.Name</td>
                        }
                        @if (showMail)
                        {
                            <td>@ap.ParentVolunteer.Mail</td>
                        }
                        @if (showChildName)
                        {
                            <td>@child.Name</td>
                        }
                        @if (showAge)
                        {
                            <td>@child.Age</td>
                        }
                        @if (showClothingSize)
                        {
                            <td>@child.ClothingSize</td>
                        }
                        @if (showInterests)
                        {
                            <td>@child.Interests</td>
                        }
                        @if (showComment)
						{
							<td>@ap.Comment</td>
						}
                        @if (showFirstPriority)
                        {
                            <td>@ap.FirstPrio.From - @ap.FirstPrio.To (Uge @ap.FirstPrio.Week)</td>
                        }
                        @if (showSecondPriority)
                        {
                            <td>@ap.SecondPrio.From - @ap.SecondPrio.To (Uge @ap.SecondPrio.Week)</td>
                        }
                        @if (showEditFinalDate)
                        {
                            <td>
                                <select class="form-select" @onchange="(e) => UpdateFinalDate(ap, e.Value.ToString())">
                                    <option value="">Vælg prioritet</option>
                                    <option value="1">First Priority</option>
                                    <option value="2">Second Priority</option>
                                </select>
                            </td>
                        }
                        @if (showConsent)
                        {
                            <td>
                                @if (!string.IsNullOrEmpty(ap.ConsentForm))
                                {
                                    <img src="@ap.ConsentForm" alt="Signature" style="width:200px; height:100px;" />
                                }
                                else
                                {
                                    <p>No signature</p>
                                }
                            </td>
                        }
                        <td>
                            <button @* @onclick="() => EditApplication(ap)" *@><i class="bi bi-pencil"></i></button>
                            <button @onclick="() => DeleteApplication(ap.ApplicationId)"><i class="bi bi-trash"></i></button>
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>
}

@code {
    private List<Application> applications;
    private List<Application> filteredApplications;
    private List<Event> events;
    private int? selectedWeek;
    private int? selectedPeriod;
    private string serverURL = "https://localhost:7095/";
    private List<int> weeks = new List<int> { 27, 28, 30, 31 };

    private bool showCrewNumber = true;
    private bool showParentName = true;
    private bool showMail = true;
    private bool showConsent = true;
    private bool showChildName = true;
    private bool showAge = true;
    private bool showClothingSize = false;
    private bool showInterests = false;
    private bool showComment = true;
    private bool showFirstPriority = true;
    private bool showSecondPriority = true;
    private bool showFinalDate = true;
    private bool showEditFinalDate = true;

    protected override async Task OnInitializedAsync()
    {
        await LoadData();
    }

    private async Task LoadData()
    {
        applications = await httpClient.GetFromJsonAsync<List<Application>>($"{serverURL}api/aps/getall");
        events = await httpClient.GetFromJsonAsync<List<Event>>($"{serverURL}api/aps/getallevents");
        filteredApplications = applications ?? new List<Application>();
        UpdateApplicationCounts();
    }

    private void FilterApplicationsByWeek(int week)
    {
        selectedWeek = week;
        selectedPeriod = null;
        FilterApplications();
    }

    private void FilterApplicationsByPeriod(int eventId)
    {
        selectedPeriod = eventId;
        FilterApplications();
    }

    private void FilterApplications()
    {
        if (selectedWeek.HasValue)
        {
            filteredApplications = applications
                .Where(ap => ap.FirstPrio.Week == selectedWeek.Value)
                .ToList();

            if (selectedPeriod.HasValue)
            {
                filteredApplications = filteredApplications
                    .Where(ap => ap.FirstPrio.EventId == selectedPeriod.Value)
                    .ToList();
            }
        }
        else
        {
            filteredApplications = applications ?? new List<Application>();
        }
    }

    private List<Event> GetPeriodsForWeek(int week)
    {
        return (events ?? new List<Event>()).Where(e => e.Week == week).ToList();
    }

    private int GetApplicationCountForWeek(int week)
{
    // Tjek om 'applications' listen er null før forsøget på at anvende LINQ operationer
    if (applications == null)
    {
        Console.WriteLine("Ingen applikationer er indlæst.");
        return 0; // Returner 0, da der ikke kan være nogen applikationer at tælle
    }

    return applications.Where(ap => ap.FirstPrio.Week == week).Sum(ap => ap.ParentVolunteer.Children.Count);
}


    private int GetApplicationCountForPeriod(int eventId)
    {
        return applications.Where(ap => ap.FirstPrio.EventId == eventId).Sum(ap => ap.ParentVolunteer.Children.Count);
    }

    private string GetButtonClassForWeekCount(int count)
    {
        if (count < 13)
            return "btn-green";
        else if (count < 18)
            return "btn-yellow";
        else
            return "btn-red";
    }

    private string GetButtonClassForPeriodCount(int count)
    {
        if (count < 6)
            return "btn-green";
        else if (count < 10)
            return "btn-yellow";
        else
            return "btn-red";
    }

    private async Task UpdateFinalDate(Application application, string prio)
    {
        if (prio == "1")
        {
            application.FirstPrio = application.FirstPrio;
        }
        else if (prio == "2")
        {
            application.FirstPrio = application.SecondPrio;
        }

        var response = await httpClient.PutAsJsonAsync($"{serverURL}api/aps/updatefinaldate", application);
        if (response.IsSuccessStatusCode)
        {
            await LoadData(); // Reload data to reflect the update immediately
        }
    }

    private void UpdateApplicationCounts()
    {
        // Refresh week and period counts whenever data changes
        foreach (var week in weeks)
        {
            var count = GetApplicationCountForWeek(week);
            Console.WriteLine($"Week {week}: {count} children based on FinalDate");
        }
    }

    private async Task DeleteApplication(int applicationId)
    {
        var response = await httpClient.DeleteAsync($"{serverURL}api/aps/delete/{applicationId}");
        if (response.IsSuccessStatusCode)
        {
            await LoadData(); // Reload data to reflect the update immediately
        }
    }

    private async Task ToYouthPage()
    {
        NavigationManager.NavigateTo("/youth", forceLoad: true);
    }
}
